#ifndef GENERATED_ASN1SCC_IP_H
#define GENERATED_ASN1SCC_IP_H
/*
Code automatically generated by asn1scc tool
*/
#include "asn1crt.h"

#ifdef  __cplusplus
extern "C" {
#endif



typedef asn1SccSint __po_hi_c_Port_T;

#define __po_hi_c_Port_T_REQUIRED_BYTES_FOR_ENCODING       2 
#define __po_hi_c_Port_T_REQUIRED_BITS_FOR_ENCODING        15
#define __po_hi_c_Port_T_REQUIRED_BYTES_FOR_ACN_ENCODING   2 
#define __po_hi_c_Port_T_REQUIRED_BITS_FOR_ACN_ENCODING    15
#define __po_hi_c_Port_T_REQUIRED_BYTES_FOR_XER_ENCODING   37

void __po_hi_c_Port_T_Initialize(__po_hi_c_Port_T* pVal);
flag __po_hi_c_Port_T_IsConstraintValid(const __po_hi_c_Port_T* val, int* pErrCode);
#ifndef ERR___po_hi_c_Port_T 
#define ERR___po_hi_c_Port_T		1001  /*(0 .. 16535)*/
#endif

typedef enum {
    __po_hi_c_ipv4 = 0,
    __po_hi_c_ipv6 = 1
} __po_hi_c_Version_T;

#define __po_hi_c_Version_T_REQUIRED_BYTES_FOR_ENCODING       1 
#define __po_hi_c_Version_T_REQUIRED_BITS_FOR_ENCODING        1
#define __po_hi_c_Version_T_REQUIRED_BYTES_FOR_ACN_ENCODING   1 
#define __po_hi_c_Version_T_REQUIRED_BITS_FOR_ACN_ENCODING    1
#define __po_hi_c_Version_T_REQUIRED_BYTES_FOR_XER_ENCODING   34

void __po_hi_c_Version_T_Initialize(__po_hi_c_Version_T* pVal);
flag __po_hi_c_Version_T_IsConstraintValid(const __po_hi_c_Version_T* val, int* pErrCode);
#ifndef ERR___po_hi_c_Version_T_unknown_enumeration_value 
#define ERR___po_hi_c_Version_T_unknown_enumeration_value		1003  /**/
#endif
#ifndef ERR___po_hi_c_Version_T 
#define ERR___po_hi_c_Version_T		1002  /**/
#endif

typedef char __po_hi_c_ip_conf_t_dns[41];

#define __po_hi_c_ip_conf_t_dns_REQUIRED_BYTES_FOR_ENCODING       36 
#define __po_hi_c_ip_conf_t_dns_REQUIRED_BITS_FOR_ENCODING        286
#define __po_hi_c_ip_conf_t_dns_REQUIRED_BYTES_FOR_ACN_ENCODING   36 
#define __po_hi_c_ip_conf_t_dns_REQUIRED_BITS_FOR_ACN_ENCODING    286
#define __po_hi_c_ip_conf_t_dns_REQUIRED_BYTES_FOR_XER_ENCODING   71

void __po_hi_c_ip_conf_t_dns_Initialize(__po_hi_c_ip_conf_t_dns pVal);
flag __po_hi_c_ip_conf_t_dns_IsConstraintValid(const __po_hi_c_ip_conf_t_dns val, int* pErrCode);
#ifndef ERR___po_hi_c_ip_conf_t_dns 
#define ERR___po_hi_c_ip_conf_t_dns		1004  /*(SIZE(1 .. 40))*/
#endif

typedef char __po_hi_c_ip_conf_t_gateway[41];

#define __po_hi_c_ip_conf_t_gateway_REQUIRED_BYTES_FOR_ENCODING       36 
#define __po_hi_c_ip_conf_t_gateway_REQUIRED_BITS_FOR_ENCODING        286
#define __po_hi_c_ip_conf_t_gateway_REQUIRED_BYTES_FOR_ACN_ENCODING   36 
#define __po_hi_c_ip_conf_t_gateway_REQUIRED_BITS_FOR_ACN_ENCODING    286
#define __po_hi_c_ip_conf_t_gateway_REQUIRED_BYTES_FOR_XER_ENCODING   79

void __po_hi_c_ip_conf_t_gateway_Initialize(__po_hi_c_ip_conf_t_gateway pVal);
flag __po_hi_c_ip_conf_t_gateway_IsConstraintValid(const __po_hi_c_ip_conf_t_gateway val, int* pErrCode);
#ifndef ERR___po_hi_c_ip_conf_t_gateway 
#define ERR___po_hi_c_ip_conf_t_gateway		1005  /*(SIZE(1 .. 40))*/
#endif

typedef char __po_hi_c_ip_conf_t_netmask[41];

#define __po_hi_c_ip_conf_t_netmask_REQUIRED_BYTES_FOR_ENCODING       36 
#define __po_hi_c_ip_conf_t_netmask_REQUIRED_BITS_FOR_ENCODING        286
#define __po_hi_c_ip_conf_t_netmask_REQUIRED_BYTES_FOR_ACN_ENCODING   36 
#define __po_hi_c_ip_conf_t_netmask_REQUIRED_BITS_FOR_ACN_ENCODING    286
#define __po_hi_c_ip_conf_t_netmask_REQUIRED_BYTES_FOR_XER_ENCODING   79

void __po_hi_c_ip_conf_t_netmask_Initialize(__po_hi_c_ip_conf_t_netmask pVal);
flag __po_hi_c_ip_conf_t_netmask_IsConstraintValid(const __po_hi_c_ip_conf_t_netmask val, int* pErrCode);
#ifndef ERR___po_hi_c_ip_conf_t_netmask 
#define ERR___po_hi_c_ip_conf_t_netmask		1006  /*(SIZE(1 .. 40))*/
#endif

typedef char __po_hi_c_ip_conf_t_broadcast[41];

#define __po_hi_c_ip_conf_t_broadcast_REQUIRED_BYTES_FOR_ENCODING       36 
#define __po_hi_c_ip_conf_t_broadcast_REQUIRED_BITS_FOR_ENCODING        286
#define __po_hi_c_ip_conf_t_broadcast_REQUIRED_BYTES_FOR_ACN_ENCODING   36 
#define __po_hi_c_ip_conf_t_broadcast_REQUIRED_BITS_FOR_ACN_ENCODING    286
#define __po_hi_c_ip_conf_t_broadcast_REQUIRED_BYTES_FOR_XER_ENCODING   83

void __po_hi_c_ip_conf_t_broadcast_Initialize(__po_hi_c_ip_conf_t_broadcast pVal);
flag __po_hi_c_ip_conf_t_broadcast_IsConstraintValid(const __po_hi_c_ip_conf_t_broadcast val, int* pErrCode);
#ifndef ERR___po_hi_c_ip_conf_t_broadcast 
#define ERR___po_hi_c_ip_conf_t_broadcast		1007  /*(SIZE(1 .. 40))*/
#endif

typedef char __po_hi_c_ip_conf_t_address[41];

#define __po_hi_c_ip_conf_t_address_REQUIRED_BYTES_FOR_ENCODING       36 
#define __po_hi_c_ip_conf_t_address_REQUIRED_BITS_FOR_ENCODING        286
#define __po_hi_c_ip_conf_t_address_REQUIRED_BYTES_FOR_ACN_ENCODING   36 
#define __po_hi_c_ip_conf_t_address_REQUIRED_BITS_FOR_ACN_ENCODING    286
#define __po_hi_c_ip_conf_t_address_REQUIRED_BYTES_FOR_XER_ENCODING   79

void __po_hi_c_ip_conf_t_address_Initialize(__po_hi_c_ip_conf_t_address pVal);
flag __po_hi_c_ip_conf_t_address_IsConstraintValid(const __po_hi_c_ip_conf_t_address val, int* pErrCode);
#ifndef ERR___po_hi_c_ip_conf_t_address 
#define ERR___po_hi_c_ip_conf_t_address		1008  /*(SIZE(1 .. 40))*/
#endif

typedef char __po_hi_c_ip_conf_t_devname[21];

#define __po_hi_c_ip_conf_t_devname_REQUIRED_BYTES_FOR_ENCODING       19 
#define __po_hi_c_ip_conf_t_devname_REQUIRED_BITS_FOR_ENCODING        145
#define __po_hi_c_ip_conf_t_devname_REQUIRED_BYTES_FOR_ACN_ENCODING   19 
#define __po_hi_c_ip_conf_t_devname_REQUIRED_BITS_FOR_ACN_ENCODING    145
#define __po_hi_c_ip_conf_t_devname_REQUIRED_BYTES_FOR_XER_ENCODING   59

void __po_hi_c_ip_conf_t_devname_Initialize(__po_hi_c_ip_conf_t_devname pVal);
flag __po_hi_c_ip_conf_t_devname_IsConstraintValid(const __po_hi_c_ip_conf_t_devname val, int* pErrCode);
#ifndef ERR___po_hi_c_ip_conf_t_devname 
#define ERR___po_hi_c_ip_conf_t_devname		1009  /*(SIZE(1 .. 20))*/
#endif

typedef struct {
    __po_hi_c_ip_conf_t_devname devname;
    __po_hi_c_ip_conf_t_address address;
    __po_hi_c_ip_conf_t_broadcast broadcast;
    __po_hi_c_ip_conf_t_netmask netmask;
    __po_hi_c_ip_conf_t_gateway gateway;
    __po_hi_c_ip_conf_t_dns dns;
    __po_hi_c_Version_T version;
    __po_hi_c_Port_T port;
    struct {
        unsigned int broadcast:1;
        unsigned int netmask:1;
        unsigned int gateway:1;
        unsigned int dns:1;
        unsigned int version:1;
    } exist;
} __po_hi_c_ip_conf_t;

#define __po_hi_c_ip_conf_t_REQUIRED_BYTES_FOR_ENCODING       200 
#define __po_hi_c_ip_conf_t_REQUIRED_BITS_FOR_ENCODING        1596
#define __po_hi_c_ip_conf_t_REQUIRED_BYTES_FOR_ACN_ENCODING   200 
#define __po_hi_c_ip_conf_t_REQUIRED_BITS_FOR_ACN_ENCODING    1596
#define __po_hi_c_ip_conf_t_REQUIRED_BYTES_FOR_XER_ENCODING   416

void __po_hi_c_ip_conf_t_Initialize(__po_hi_c_ip_conf_t* pVal);
flag __po_hi_c_ip_conf_t_IsConstraintValid(const __po_hi_c_ip_conf_t* val, int* pErrCode);


extern const __po_hi_c_ip_conf_t localhost1;
extern const __po_hi_c_ip_conf_t localhost2; 

/* ================= Encoding/Decoding function prototypes =================
 * These functions are placed at the end of the file to make sure all types
 * have been declared first, in case of parameterized ACN encodings
 * ========================================================================= */









 


#ifdef  __cplusplus
}
#define ENUM___po_hi_c_ipv4	__po_hi_c_ipv4
#define ENUM___po_hi_c_ipv6	__po_hi_c_ipv6

#endif

#endif
