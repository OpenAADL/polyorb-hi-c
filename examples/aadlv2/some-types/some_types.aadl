package Some_types
public
  with Software;
  with Deployment;
  with ocarina_drivers;
  with ocarina_buses;

  ---------------
  -- Processor --
  ---------------

  processor the_processor
  properties
    Deployment::Execution_Platform => Native;
  end the_processor;

  ---------------
  -- Processes --
  ---------------

  process A
  features
    Out_Boolean : out event data port Software::Boolean_Type;
    Out_Integer : out event data port Software::Integer_Type;
    Out_Struct  : out event data port Software::Struct_Type.Impl;
    Out_Array  : out event data port Software::Array_Type;
  end A;

  process implementation A.Impl
  subcomponents
    Emitter_Thread : thread Software::Emitter.Impl;
  connections
    port Emitter_Thread.Boolean_Source -> Out_Boolean;
    port Emitter_Thread.Integer_Source -> Out_Integer;
    port Emitter_Thread.Struct_Source -> Out_Struct;
    port Emitter_Thread.Array_Source -> Out_Array;
  end A.Impl;

  process B
  features
    In_Boolean  : in event data port Software::Boolean_Type;
    In_Integer  : in event data port Software::Integer_Type;
    In_Struct   : in event data port Software::Struct_Type.Impl;
    in_array    : in event data port Software::Array_Type;
  end B;

  process implementation B.Impl
  subcomponents
    Boolean_Rcv_Thread : thread Software::Boolean_Receiver.Impl;
    Integer_Rcv_Thread : thread Software::Integer_Receiver.Impl;
    Struct_Rcv_Thread  : thread Software::Struct_Receiver.Impl;
    Array_Rcv_Thread  : thread Software::Array_Receiver.Impl;
  connections
    port In_Boolean -> Boolean_Rcv_Thread.Data_Sink;
    port In_Integer -> Integer_Rcv_Thread.Data_Sink;
    port In_Struct  -> Struct_Rcv_Thread.Data_Sink;
    port In_Array  -> Array_Rcv_Thread.Data_Sink;
  end B.Impl;

  process singleProcess
  end singleProcess;

  process implementation singleProcess.impl
  subcomponents
    Emitter_Thread     : thread Software::Emitter.Impl;
    Boolean_Rcv_Thread : thread Software::Boolean_Receiver.Impl;
    Integer_Rcv_Thread : thread Software::Integer_Receiver.Impl;
    Struct_Rcv_Thread  : thread Software::Struct_Receiver.Impl;
    Array_Rcv_Thread  : thread Software::Array_Receiver.Impl;
  connections
    port Emitter_Thread.Boolean_Source -> Boolean_Rcv_Thread.Data_Sink;
    port Emitter_Thread.Integer_Source -> Integer_Rcv_Thread.Data_Sink;
    port Emitter_Thread.Struct_Source -> Struct_Rcv_Thread.Data_Sink;
    port Emitter_Thread.Array_Source -> Array_Rcv_Thread.Data_Sink;
  end singleProcess.impl;

  ------------
  -- System --
  ------------

  system Some_Types
  end Some_Types;

  system implementation Some_Types.Impl
  subcomponents
    Node_A : process A.Impl;
    Node_B : process B.Impl;
    Device_A : device ocarina_drivers::generic_sockets_ip.pohic
    {Source_Text => ("devicesconf.c");};
    Device_B : device ocarina_drivers::generic_sockets_ip.pohic
    {Source_Text => ("devicesconf.c");};
    CPU_A : processor the_processor;
    CPU_B : processor the_processor;
    the_bus : bus ocarina_buses::ip.i;
  connections
    bus access the_bus -> Device_A.link;
    bus access the_bus -> Device_B.link;
    port Node_A.Out_Boolean -> Node_B.In_Boolean
    {Actual_Connection_Binding => (reference (the_bus));};
    port Node_A.Out_Integer -> Node_B.In_Integer
    {Actual_Connection_Binding => (reference (the_bus));};
    port Node_A.Out_Struct -> Node_B.In_Struct
    {Actual_Connection_Binding => (reference (the_bus));};
    port Node_A.Out_Array -> Node_B.In_Array
    {Actual_Connection_Binding => (reference (the_bus));};
  properties
    actual_processor_binding => (reference (CPU_A)) applies to Node_A;
    actual_processor_binding => (reference (CPU_B)) applies to Node_B;
    actual_processor_binding => (reference (CPU_A)) applies to Device_A;
    actual_processor_binding => (reference (CPU_B)) applies to Device_B;
  end Some_Types.Impl;

  system implementation Some_Types.local
  subcomponents
    CPU_A: processor the_processor;
    sometypes: process singleProcess.impl;
  properties
    Actual_Processor_Binding => reference (CPU_A) applies to sometypes;
  end Some_Types.local;

  system implementation Some_Types.Xenomai
  extends Some_Types.local
  properties
    Deployment::Execution_Platform => linux32_xenomai_native applies to CPU_A;
  end Some_Types.Xenomai;

  system implementation Some_Types.RTEMS
  extends Some_Types.local
  properties
    Deployment::Execution_platform => LEON_RTEMS applies to CPU_A ;
  end Some_Types.RTEMS;

end Some_Types;
