# Makefile.in generated by automake 1.15 from Makefile.am.
# examples/aadlv2/some-types/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2014 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



############################################################################
# Common makefile for PolyORB HI
#
# $Id: Makefile.common 6233 2009-03-03 12:53:03Z hugues $

############################################################################
# Default rule
#

am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/polyorb-hi-c
pkgincludedir = $(includedir)/polyorb-hi-c
pkglibdir = $(libdir)/polyorb-hi-c
pkglibexecdir = $(libexecdir)/polyorb-hi-c
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i686-pc-linux-gnu
host_triplet = i686-pc-linux-gnu
subdir = examples/aadlv2/some-types
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/support/ax_boost_base.m4 \
	$(top_srcdir)/support/ocarina.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/include/po_hi_config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
SOURCES =
DIST_SOURCES =
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
am__DIST_COMMON = $(srcdir)/../../Makefile.common \
	$(srcdir)/Makefile.in
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/francis/polyorb-hi-c/support/missing aclocal-1.15
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 1
AUTOCONF = ${SHELL} /home/francis/polyorb-hi-c/support/missing autoconf
AUTOHEADER = ${SHELL} /home/francis/polyorb-hi-c/support/missing autoheader
AUTOMAKE = ${SHELL} /home/francis/polyorb-hi-c/support/missing automake-1.15
AWK = mawk
BIBTEX = 
BOOST_CPPFLAGS = -I/include/boost-0
BOOST_LDFLAGS = -L/lib
CC = gcc
CCDEPMODE = depmode=none
CFLAGS = -Wall -O
CHMOD = chmod
CP = cp
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXDEPMODE = depmode=none
CXXFLAGS = -g -O2
CYGPATH_U = echo
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DOC_TARGETS = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = grep -E
EXEEXT = 
GREP = grep
HAS_LUA_ = 
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LDFLAGS = 
LIBOBJS = 
LIBS = 
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/francis/polyorb-hi-c/support/missing makeinfo
MKDIR_P = /bin/mkdir -p
MV = mv
NATIVE_CFLAGS =  -DPOSIX -D_POSIX_SOURCE -D_GNU_SOURCE
NATIVE_LDFLAGS =  -lpthread -lrt
OBJEXT = o
OCARINA_ADAFLAGS = -aI/home/francis/ocarina-build/ocarina_install/include/ocarina -aO/home/francis/ocarina-build/ocarina_install/lib/ocarina
OCARINA_CONFIG = /home/francis/ocarina-build/ocarina_install/bin//ocarina-config
OCARINA_LIBS = -L/home/francis/ocarina-build/ocarina_install/lib -locarina-config -locarina-transfo -locarina-frontends -locarina-backends -locarina
OCARINA_PREFIX = /home/francis/ocarina-build/ocarina_install
OCARINA_RESOURCES = /home/francis/ocarina-build/ocarina_install/share/ocarina
OCARINA_RUNTIME = /home/francis/ocarina-build/ocarina_install/include/ocarina/runtime
PACKAGE = polyorb-hi-c
PACKAGE_BUGREPORT = 
PACKAGE_NAME = PolyORB-HI/C
PACKAGE_STRING = PolyORB-HI/C 2017.x
PACKAGE_TARNAME = polyorb-hi-c
PACKAGE_URL = 
PACKAGE_VERSION = 2017.x
PATH_SEPARATOR = :
RM = rm
SET_MAKE = 
SHELL = /bin/sh
SIMULINK_LDFLAGS = -lm
STRIP = 
TEX = 
TEXI2HTML = 
VERSION = 2017.x
abs_builddir = /home/francis/polyorb-hi-c/examples/aadlv2/some-types
abs_srcdir = /home/francis/polyorb-hi-c/examples/aadlv2/some-types
abs_top_builddir = /home/francis/polyorb-hi-c
abs_top_srcdir = /home/francis/polyorb-hi-c
ac_ct_CC = gcc
ac_ct_CXX = g++
am__include = include
am__leading_dot = .
am__quote = 
am__tar = tar --format=posix -chf - "$$tardir"
am__untar = tar -xf -
bindir = ${exec_prefix}/bin
build = i686-pc-linux-gnu
build_alias = 
build_cpu = i686
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = i686-pc-linux-gnu
host_alias = 
host_cpu = i686
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/francis/polyorb-hi-c/support/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = $(OCARINA_PREFIX)
program_transform_name = s,x,x,
psdir = ${docdir}
runstatedir = ${localstatedir}/run
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../../../
top_builddir = ../../..
top_srcdir = ../../..
C_FILES = $(srcdir)/some-types.c $(srcdir)/devicesconf.c
AADL_FILES = $(srcdir)/some_types.aadl $(srcdir)/software.aadl
SCENARIO_FILES = $(srcdir)/scenario.aadl				\
	$(srcdir)/scenario_local.aadl $(srcdir)/scenario_rtems.aadl


############################################################################
# Installation rule
#
SAMPLE_NAME = $(subst examples/,,$(subdir))
SAMPLE_DIR = ${shell $(CYGPATH_U) '$(OCARINA_PREFIX)/examples/ocarina/polyorb-hi-c/$(SAMPLE_NAME)'}
EXTRA_DIST = $(AADL_FILES) $(SCENARIO_FILES) $(C_FILES)
CLEANDIRS = some_types_impl some_types_local some_types_rtems
all: all-am

.SUFFIXES:
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(srcdir)/../../Makefile.common $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign examples/aadlv2/some-types/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign examples/aadlv2/some-types/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;
$(srcdir)/../../Makefile.common $(am__empty):

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
tags TAGS:

ctags CTAGS:

cscope cscopelist:


distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile all-local
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-local mostlyclean-am

distclean: distclean-am
	-rm -f Makefile
distclean-am: clean-am distclean-generic

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-data-local

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: install-am install-strip

.PHONY: all all-am all-local check check-am clean clean-generic \
	clean-local cscopelist-am ctags-am distclean distclean-generic \
	distdir dvi dvi-am html html-am info info-am install \
	install-am install-data install-data-am install-data-local \
	install-dvi install-dvi-am install-exec install-exec-am \
	install-html install-html-am install-info install-info-am \
	install-man install-pdf install-pdf-am install-ps \
	install-ps-am install-strip installcheck installcheck-am \
	installdirs maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-generic pdf pdf-am ps ps-am tags-am \
	uninstall uninstall-am

.PRECIOUS: Makefile


all-local:
	@echo "TO BUILD THE EXAMPLE, YOU SHOULD ISSUE '$(MAKE) build-all'"

build-all:
	@if test ! "$(SCENARIO_FILES)" = "";  then \
	   $(MAKE) scenarios; \
	elif test ! "$(SCENARIO_FILE)" = ""; then \
	   $(MAKE) scenario; \
	else \
	   echo "No scenario files, nothing to be done"; \
	fi

check-all:
	@if test ! "$(SCENARIO_FILES)" = "";  then \
	   $(MAKE) scenarios-check; \
	elif test ! "$(SCENARIO_FILE)" = ""; then \
	   $(MAKE) scenario-check; \
	else \
	   echo "No scenario files, nothing to be done"; \
	fi

############################################################################
# Code generation from AADL
#

scenarios:
	@echo " * Processing scenario from $(shell pwd)";
	@for sc in $(SCENARIO_FILES); do \
	  $(MAKE) SCENARIO_FILE=$${sc} SCENARIO_FILES="" build-all || exit 1; \
	done;

scenario:
	@echo "  * $(SCENARIO_FILE) $(shell pwd)";
	ocarina$(EXEEXT) -aadlv2 -b -x '${shell $(CYGPATH_W) $(SCENARIO_FILE)}';

############################################################################
# Code generation and execution from AADL
#

scenarios-check:
	@echo "********* SCENARIO_FILES = $(SCENARIO_FILES) *********";
	@for sc in $(SCENARIO_FILES); do \
	  $(MAKE) SCENARIO_FILE=$${sc} SCENARIO_FILES="" check-all || exit 1; \
	done;

scenario-check:
	@echo "*********  SCENARIO_FILE = $(SCENARIO_FILE)  *********";
	ocarina$(EXEEXT) -b -e -x '${shell $(CYGPATH_W) $(SCENARIO_FILE)}';

install-data-local:
	$(INSTALL) -d $(DESTDIR)$(SAMPLE_DIR)
	if [ -r $(srcdir)/README ]; then \
	  $(INSTALL_DATA) $(srcdir)/README $(DESTDIR)$(SAMPLE_DIR); \
	fi
	for f in $(EXTRA_DIST); do \
	  $(INSTALL_DATA) $$f $(DESTDIR)$(SAMPLE_DIR); \
	done

############################################################################
# clean rule
#

clean-local:
	@-rm -f *~ *.o *.al temp.* *.metrix gnatcheck.out log_ocarina
	if test ! "$(CLEANDIRS)" = "";  then \
	   rm -rf $(CLEANDIRS); \
	fi

############################################################################
# Debug stuff
#

debug-makefile:
	@echo "SAMPLE_NAME    = $(SAMPLE_NAME)"
	@echo "SAMPLE_DIR     = $(SAMPLE_DIR)"
	@echo "SCENARIO_FILES = $(SCENARIO_FILES)"
	@echo "SCENARIO_FILE  = $(SCENARIO_FILE)"

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
