package Pack::Latencylocal
public
  with Deployment, Data_Model;

  data timedata
  properties
    Data_Model::Data_Representation => integer;
  end timedata;

  -----------------
  -- Subprograms --
  -----------------

  subprogram sensorspg
  features
    outed : out parameter timedata;
  properties
    source_language => C;
    source_name     => "sensor_emulator";
    source_text     => "functions.c";
  end sensorspg;

  subprogram actuatorspg
  features
    ined : in parameter timedata;
  properties
    source_language => C;
    source_name     => "actuator_emulator";
    source_text     => "functions.c";
  end actuatorspg;

  subprogram step1spg
  features
    ined : in parameter timedata;
    outed : out parameter timedata;
  properties
    source_language => C;
    source_name     => "spg1";
    source_text     => "functions.c";
  end step1spg;

  subprogram step2spg
  features
    ined : in parameter timedata;
    outed : out parameter timedata;
  properties
    source_language => C;
    source_name     => "spg2";
    source_text     => "functions.c";
  end step2spg;

  subprogram step3spg
  features
    ined : in parameter timedata;
    outed : out parameter timedata;
  properties
    source_language => C;
    source_name     => "spg3";
    source_text     => "functions.c";
  end step3spg;

  -------------
  -- Threads --
  -------------

  thread step1
  features
    ined: in data port timedata;
    outed: out data port timedata;
  end step1;

  thread implementation step1.periodic
  calls
    Mycalls: {
    myspg : subprogram step1spg;
    };
  connections
    parameter ined -> myspg.ined;
    parameter myspg.outed -> outed;
  properties
    Dispatch_Protocol => Periodic;
    period => 500 ms;
    deadline => 450 ms;
    Compute_Execution_Time => 60 ms .. 100 ms;
  end step1.periodic;

  thread step2
  features
    ined: in data port timedata;
    outed: out data port timedata;
  End step2;

  thread implementation step2.periodic
  calls
    Mycalls: {
    myspg : subprogram step2spg;
    };
  connections
    parameter ined -> myspg.ined;
    parameter myspg.outed -> outed;
  properties
    Dispatch_Protocol => Periodic;
    period => 1000 ms;
    deadline => 700 ms;
    Compute_Execution_Time => 150 ms .. 230 ms;
  end step2.periodic;

  thread step3
  features
    ined: in data port timedata;
    outed: out data port timedata;
  properties
    Dispatch_Protocol => Periodic;
    period => 500 ms;
    deadline => 450 ms;
    Compute_Execution_Time => 60 ms .. 100 ms;
  End step3;

  thread implementation step3.periodic
  calls
    Mycalls: {
    myspg : subprogram step3spg;
    };
  connections
    parameter ined -> myspg.ined;
    parameter myspg.outed -> outed;
  end step3.periodic;

  thread sensor_thread
  features
    outed: out data port timedata;
  properties
    Dispatch_Protocol => Periodic;
    period => 500 ms;
    deadline => 20 ms;
    compute_execution_time => 10 ms .. 20 ms;
  end sensor_thread;

  thread implementation sensor_thread.periodic
  calls
    Mycalls: {
    myspg : subprogram sensorspg;
    };
  connections
    cn1 : parameter myspg.outed -> outed;
  end sensor_thread.periodic;

  thread implementation sensor_thread.aperiodic
  calls
    Mycalls: {
    myspg : subprogram sensorspg;
    };
  connections
    parameter myspg.outed -> outed;
  properties
    Dispatch_Protocol => Sporadic;
  end sensor_thread.aperiodic;

  thread actuator_thread
  features
    ined: in data port timedata;
  properties
    period => 500 ms;
    deadline => 30 ms;
    compute_execution_time => 10 ms .. 30 ms;
  end actuator_thread;

  thread implementation actuator_thread.periodic
  calls
    Mycalls: {
    myspg : subprogram actuatorspg;
    };
  connections
    parameter ined -> myspg.ined;
  properties
    Dispatch_Protocol => Periodic;
  end actuator_thread.periodic;

  thread implementation actuator_thread.aperiodic
  properties
    Dispatch_Protocol => Sporadic;
  end actuator_thread.aperiodic;

  -------------
  -- Process --
  -------------

  process sensor
  features
    outed: out data port timedata;
  end sensor;

  process implementation sensor.periodic
  subcomponents
    th : thread sensor_thread.periodic;
  connections
    out1: port th.outed -> outed;
  end sensor.periodic;

  process implementation sensor.aperiodic
  subcomponents
    th : thread sensor_thread.aperiodic;
  end sensor.aperiodic;

  process actuator
  features
    ined: in data port timedata;
  end actuator;

  process implementation actuator.periodic
  subcomponents
    th : thread actuator_thread.periodic;
  connections
    in1 : port ined -> th.ined;
  end actuator.periodic;

  process implementation actuator.aperiodic
  subcomponents
    th : thread actuator_thread.aperiodic;
  end actuator.aperiodic;

  process Pstep1
  features
    ined: in data port timedata;
    outed: out data port timedata;
  end Pstep1;

  process implementation Pstep1.periodic
  subcomponents
    Tstep1: thread Step1.periodic;
  connections
    cin: port ined -> Tstep1.ined;
    cout: port Tstep1.outed -> outed;
  end Pstep1.periodic;

  process Pstep2
  features
    ined: in data port timedata;
    outed: out data port timedata;
  end Pstep2;

  process implementation Pstep2.periodic
  subcomponents
    Tstep2: thread Step2.periodic;
  connections
    cin: port ined -> Tstep2.ined;
    cout: port Tstep2.outed -> outed;
  end Pstep2.periodic;

  process Pstep3
  features
    ined: in data port timedata;
    outed: out data port timedata;
  end Pstep3;

  process implementation Pstep3.periodic
  subcomponents
    Tstep3: thread Step3.periodic;
  connections
    cin: port ined -> Tstep3.ined;
    cout: port Tstep3.outed -> outed;
  end Pstep3.periodic;

  process singleProcess
  end singleProcess;

  process implementation singleProcess.impl
  subcomponents
    Tsensor : thread sensor_thread.periodic;
    Tstep1 : thread Step1.periodic;
    Tstep2 : thread Step2.periodic;
    Tstep3 : thread Step3.periodic;
    Tactuator : thread actuator_thread.periodic;
  connections
    C1: port Tsensor.outed -> Tstep1.ined;
    C2: port Tstep1.outed -> Tstep2.ined;
    C3: port Tstep2.outed -> Tstep3.ined;
    C4: port Tstep3.outed -> Tactuator.ined;
  end singleProcess.impl;

  -- hardware platforms: single processor, dual processor
  ---------------
  -- Processor --
  ---------------
  processor singleCPU
  features
    db: requires bus access devicebus.basic;
    pb: requires bus access cpubus.basic;
  properties
    Deployment::location           => "127.0.0.1";
    Deployment::Execution_Platform => Native;
    Scheduling_Protocol => (Posix_1003_Highest_Priority_First_Protocol);
    Priority_Range => 0 .. 255;
  end singleCPU;

  processor implementation singleCPU.basic
  end singleCPU.basic;

  ---------
  -- BUS --
  ---------

  bus cpubus
  end cpubus;

  bus implementation cpubus.basic
  end cpubus.basic;

  bus devicebus
  properties
    Deployment::Transport_API => BSD_Sockets;
  end devicebus;

  bus implementation devicebus.basic
  end devicebus.basic;
  ------------------------
  -- System application --
  ------------------------

  system application
  features
    db: requires bus access devicebus;
  end application;

  system implementation application.allperiodicdelayed
  subcomponents
    sense: process sensor.periodic;
    actuate: process actuator.periodic;
    compute1: process Pstep1.periodic;
    compute2: process Pstep2.periodic;
    compute3: process Pstep3.periodic;
  connections
    senseconn: port sense.outed -> compute1.ined;
    compute12: port compute1.outed -> compute2.ined;
    compute23: port compute2.outed -> compute3.ined;
    actuateconn: port compute3.outed -> actuate.ined;
  end application.allperiodicdelayed;

  ---------------
  -- System -----
  ---------------
  system topsystem
  end topsystem;

  system implementation topsystem.distributedallperiodicdelayed
  subcomponents
    cpu: processor singleCPU.basic;
    db: bus devicebus.basic;
    pb: bus cpubus.basic;
    sense: process sensor.periodic 	{Deployment::port_number => 32002;};
    compute1: process Pstep1.periodic 	{Deployment::port_number => 32003;};
    compute2: process Pstep2.periodic 	{Deployment::port_number => 32004;};
    compute3: process Pstep3.periodic 	{Deployment::port_number => 32005;};
    actuate: process actuator.periodic 	{Deployment::port_number => 32006;};
  connections
    senseconn: port sense.outed -> compute1.ined    {Actual_Connection_Binding => (reference (db));};
    compute12: port compute1.outed -> compute2.ined {Actual_Connection_Binding => (reference (db));};
    compute23: port compute2.outed -> compute3.ined {Actual_Connection_Binding => (reference (db));};
    actuateconn: port compute3.outed -> actuate.ined {Actual_Connection_Binding => (reference (db));};
    bus access db -> cpu.db;
    bus access pb -> cpu.pb;
  properties
    Actual_Processor_Binding => reference (cpu) applies to sense;
    Actual_Processor_Binding => reference (cpu) applies to actuate;
    Actual_Processor_Binding => reference (cpu) applies to compute1;
    Actual_Processor_Binding => reference (cpu) applies to compute2;
    Actual_Processor_Binding => reference (cpu) applies to compute3;
  end topsystem.distributedallperiodicdelayed;

  system topsystem_local
  end topsystem_local;

  system implementation topsystem.local
  subcomponents
    CPU_A: processor singleCPU.basic;
    latency: process singleProcess.impl;
  properties
    Actual_Processor_Binding => reference (CPU_A) applies to latency;
  end topsystem.local;

  system implementation topsystem.Xenomai
  extends topsystem.local
  properties
    Deployment::Execution_Platform => linux32_xenomai_native applies to CPU_A;
  end topsystem.Xenomai;

  system implementation topsystem.RTEMS
  extends topsystem.local
  properties
    Deployment::Execution_platform => LEON_RTEMS applies to CPU_A ;
  end topsystem.RTEMS;

end Pack::Latencylocal;
