#ifndef GENERATED_ASN1SCC_serial_H
#define GENERATED_ASN1SCC_serial_H
/*
Code automatically generated by asn1scc tool
*/
#include "asn1crt.h"

#ifdef  __cplusplus
extern "C" {
#endif


typedef enum {
    __po_hi_c_b9600 = 0,
    __po_hi_c_b19200 = 1,
    __po_hi_c_b38400 = 2,
    __po_hi_c_b57600 = 3,
    __po_hi_c_b115200 = 4,
    __po_hi_c_b230400 = 5
} __po_hi_c_Baudrate_T;

// please use the following macros to avoid breaking code.
#define __po_hi_c_Baudrate_T_b9600 __po_hi_c_b9600
#define __po_hi_c_Baudrate_T_b19200 __po_hi_c_b19200
#define __po_hi_c_Baudrate_T_b38400 __po_hi_c_b38400
#define __po_hi_c_Baudrate_T_b57600 __po_hi_c_b57600
#define __po_hi_c_Baudrate_T_b115200 __po_hi_c_b115200
#define __po_hi_c_Baudrate_T_b230400 __po_hi_c_b230400

void __po_hi_c_Baudrate_T_Initialize(__po_hi_c_Baudrate_T* pVal);

#define ERR_BAUDRATE_T		1  /**/
flag __po_hi_c_Baudrate_T_IsConstraintValid(const __po_hi_c_Baudrate_T* pVal, int* pErrCode);
typedef enum {
    __po_hi_c_even = 0,
    __po_hi_c_odd = 1
} __po_hi_c_Parity_T;

// please use the following macros to avoid breaking code.
#define __po_hi_c_Parity_T_even __po_hi_c_even
#define __po_hi_c_Parity_T_odd __po_hi_c_odd

void __po_hi_c_Parity_T_Initialize(__po_hi_c_Parity_T* pVal);

#define ERR_PARITY_T		8  /**/
flag __po_hi_c_Parity_T_IsConstraintValid(const __po_hi_c_Parity_T* pVal, int* pErrCode);
/*-- __po_hi_c_serial_conf_t --------------------------------------------*/
typedef char __po_hi_c_serial_conf_t_devname[21];
typedef asn1SccUint __po_hi_c_serial_conf_t_bits;

typedef asn1SccUint __po_hi_c_serial_conf_t_sending_wait;

typedef struct {
    __po_hi_c_serial_conf_t_devname devname;
    __po_hi_c_Baudrate_T speed;
    __po_hi_c_Parity_T parity;
    __po_hi_c_serial_conf_t_bits bits;
    __po_hi_c_serial_conf_t_sending_wait sending_wait;
    flag use_paritybit;

    struct {
        unsigned int speed:1;
        unsigned int parity:1;
        unsigned int bits:1;
        unsigned int sending_wait:1;
        unsigned int use_paritybit:1;
    } exist;

} __po_hi_c_serial_conf_t;

void __po_hi_c_serial_conf_t_devname_Initialize(__po_hi_c_serial_conf_t_devname val);
void __po_hi_c_serial_conf_t_bits_Initialize(__po_hi_c_serial_conf_t_bits* pVal);
void __po_hi_c_serial_conf_t_sending_wait_Initialize(__po_hi_c_serial_conf_t_sending_wait* pVal);
void __po_hi_c_serial_conf_t_Initialize(__po_hi_c_serial_conf_t* pVal);

#define ERR_SERIAL_CONF_T		65  /**/
#define ERR_SERIAL_CONF_T_DEVNAME		15  /**/
#define ERR_SERIAL_CONF_T_SPEED		22  /**/
#define ERR_SERIAL_CONF_T_PARITY		33  /**/
#define ERR_SERIAL_CONF_T_BITS		44  /**/
#define ERR_SERIAL_CONF_T_SENDING_WAIT		51  /**/
#define ERR_SERIAL_CONF_T_USE_PARITYBIT		58  /**/
flag __po_hi_c_serial_conf_t_IsConstraintValid(const __po_hi_c_serial_conf_t* pVal, int* pErrCode);

extern const __po_hi_c_serial_conf_t linux_ttyS0;
extern const __po_hi_c_serial_conf_t linux_ttyUSB0;
extern const __po_hi_c_serial_conf_t linux_ttyUSB1;
extern const __po_hi_c_serial_conf_t linux_ttyUSB2;
extern const __po_hi_c_serial_conf_t leon_rasta_apburasta0;
extern const __po_hi_c_serial_conf_t leon_rasta_apburasta1; 

/* ================= Encoding/Decoding function prototypes =================
 * These functions are placed at the end of the file to make sure all types
 * have been declared first, in case of parameterized ACN encodings
 * ========================================================================= */

 


#ifdef  __cplusplus
}

#endif

#endif
