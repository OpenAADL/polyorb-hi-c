#ifndef GENERATED_ASN1SCC_ip_H
#define GENERATED_ASN1SCC_ip_H
/*
Code automatically generated by asn1scc tool
*/
#include "asn1crt.h"

#ifdef  __cplusplus
extern "C" {
#endif


typedef asn1SccUint __po_hi_c_Port_T;


void __po_hi_c_Port_T_Initialize(__po_hi_c_Port_T* pVal);

#define ERR_PORT_T		1  /**/
flag __po_hi_c_Port_T_IsConstraintValid(const __po_hi_c_Port_T* pVal, int* pErrCode);
typedef enum {
    __po_hi_c_ipv4 = 0,
    __po_hi_c_ipv6 = 1
} __po_hi_c_Version_T;

// please use the following macros to avoid breaking code.
#define __po_hi_c_Version_T_ipv4 __po_hi_c_ipv4
#define __po_hi_c_Version_T_ipv6 __po_hi_c_ipv6

void __po_hi_c_Version_T_Initialize(__po_hi_c_Version_T* pVal);

#define ERR_VERSION_T		8  /**/
flag __po_hi_c_Version_T_IsConstraintValid(const __po_hi_c_Version_T* pVal, int* pErrCode);
/*-- __po_hi_c_ip_conf_t --------------------------------------------*/
typedef char __po_hi_c_ip_conf_t_devname[21];
typedef char __po_hi_c_ip_conf_t_address[41];
typedef char __po_hi_c_ip_conf_t_broadcast[41];
typedef char __po_hi_c_ip_conf_t_netmask[41];
typedef char __po_hi_c_ip_conf_t_gateway[41];
typedef char __po_hi_c_ip_conf_t_dns[41];
typedef struct {
    __po_hi_c_ip_conf_t_devname devname;
    __po_hi_c_ip_conf_t_address address;
    __po_hi_c_ip_conf_t_broadcast broadcast;
    __po_hi_c_ip_conf_t_netmask netmask;
    __po_hi_c_ip_conf_t_gateway gateway;
    __po_hi_c_ip_conf_t_dns dns;
    __po_hi_c_Version_T version;
    __po_hi_c_Port_T port;

    struct {
        unsigned int broadcast:1;
        unsigned int netmask:1;
        unsigned int gateway:1;
        unsigned int dns:1;
        unsigned int version:1;
    } exist;

} __po_hi_c_ip_conf_t;

void __po_hi_c_ip_conf_t_devname_Initialize(__po_hi_c_ip_conf_t_devname val);
void __po_hi_c_ip_conf_t_address_Initialize(__po_hi_c_ip_conf_t_address val);
void __po_hi_c_ip_conf_t_broadcast_Initialize(__po_hi_c_ip_conf_t_broadcast val);
void __po_hi_c_ip_conf_t_netmask_Initialize(__po_hi_c_ip_conf_t_netmask val);
void __po_hi_c_ip_conf_t_gateway_Initialize(__po_hi_c_ip_conf_t_gateway val);
void __po_hi_c_ip_conf_t_dns_Initialize(__po_hi_c_ip_conf_t_dns val);
void __po_hi_c_ip_conf_t_Initialize(__po_hi_c_ip_conf_t* pVal);

#define ERR_IP_CONF_T		79  /**/
#define ERR_IP_CONF_T_DEVNAME		15  /**/
#define ERR_IP_CONF_T_ADDRESS		22  /**/
#define ERR_IP_CONF_T_BROADCAST		29  /**/
#define ERR_IP_CONF_T_NETMASK		36  /**/
#define ERR_IP_CONF_T_GATEWAY		43  /**/
#define ERR_IP_CONF_T_DNS		50  /**/
#define ERR_IP_CONF_T_VERSION		57  /**/
#define ERR_IP_CONF_T_PORT		68  /**/
flag __po_hi_c_ip_conf_t_IsConstraintValid(const __po_hi_c_ip_conf_t* pVal, int* pErrCode);

extern const __po_hi_c_ip_conf_t localhost1;
extern const __po_hi_c_ip_conf_t localhost2; 

/* ================= Encoding/Decoding function prototypes =================
 * These functions are placed at the end of the file to make sure all types
 * have been declared first, in case of parameterized ACN encodings
 * ========================================================================= */

 


#ifdef  __cplusplus
}

#endif

#endif
