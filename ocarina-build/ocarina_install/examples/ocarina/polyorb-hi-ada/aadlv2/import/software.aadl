--  This AADL model illustrates how to model a simple interaction
--  between tasks, in a local or distributed environment.
--
--  One task pings another, sending a data periodically.
--
--  $Id: software.aadl 6273 2009-03-25 17:36:51Z lasnier $

package Software
public
  with Data_Model, Cheddar_Properties;

----------
-- Data --
----------

data Simple_Type
properties
  Data_Model::Data_Representation => integer;
end Simple_Type;

data Array_Type
end Array_Type;

data implementation Array_Type.I
properties
  Data_Model::Base_Type => classifier (Software::Simple_Type);
  Data_Model::Data_Representation => array;
  Data_Model::Dimension => (4);
end Array_Type.I;

-----------------
-- Subprograms --
-----------------

subprogram Do_Ping_Spg
features
  Data_Source : out parameter Array_Type.I;
properties
  source_language => Ada95;
  source_name     => "Ping.Do_Ping_Spg";
  source_text     => ("ping_spec.ads", "ping_body.adb");
end Do_Ping_Spg;

subprogram Ping_Spg
features
  Data_Sink : in parameter Array_Type.I;
properties
  source_language => C;
  source_name     => "ping_spg";
  source_text     => ("import.c");
end Ping_Spg;

-------------
-- Threads --
-------------

thread P
features
  Data_Source : out event data port Array_Type.I;
end P;

thread implementation P.Impl
calls 
Mycall : {
  P_Spg : subprogram Do_Ping_Spg;
};
connections
  parameter P_Spg.Data_Source -> Data_Source;
properties
  Dispatch_Protocol                  => Periodic;
  Period                             => 1000 Ms;
  Compute_Execution_time             => 0 ms .. 3 ms;
  Deadline                           => 1000 ms;
  Cheddar_Properties::Fixed_Priority => 2;
end P.Impl;

thread Q
features
  Data_Sink : in event data port Array_Type.I;
end Q;

thread implementation Q.Impl
calls 
Mycall : {
  Q_Spg : subprogram Ping_Spg;
};
connections
  parameter Data_Sink -> Q_Spg.Data_Sink;
properties
  Dispatch_Protocol                  => Sporadic;
  Period                             => 10 Ms;
  deadline                           => 10 Ms;
  Compute_Execution_time             => 0 ms .. 3 ms;
  Cheddar_Properties::Fixed_Priority => 1;
end Q.Impl;

end Software;
