--  08 20 2008
--  Olivier GILLES

package s
public
  with Data_Model;
  with Cheddar_Properties;
  with transformations;

----------
-- Data --
----------

data Simple_Type
properties
  Data_Model::Data_Representation  => integer;
end Simple_Type;

-----------------
-- Subprograms --
-----------------

subprogram Do_Ping_Spg
features
  Data_Source : out parameter Simple_Type;
end Do_Ping_Spg;

subprogram implementation Do_Ping_Spg.Impl
properties
  source_language => Ada95;
  source_name     => "Ping.Do_Ping_Spg";
end Do_Ping_Spg.Impl;

subprogram implementation Do_Ping_Spg.Impl2
properties
  source_language => Ada95;
  source_name     => "Ping.Do_Ping_Bis_Spg";
end Do_Ping_Spg.Impl2;

subprogram Ping_Spg
features
  Data_Sink : in parameter Simple_Type;
properties
  source_language => Ada95;
  source_name     => "Pinged.Ping_Spg";
end Ping_Spg;

subprogram Ping2_Spg
features
  msg_in : in parameter Simple_Type;
  msg_out : out parameter Simple_Type;
properties
  source_language => Ada95;
  source_name     => "Pinged.Ping2_Spg";
end Ping2_Spg;

subprogram Handle_ACK
features
  ack : in parameter Simple_Type;
properties
  source_language => Ada95;
  source_name     => "Ping.Handle_Ack";
end Handle_ACK;

-------------
-- Threads --
-------------

thread P
features
  Data_Source : out data port Simple_Type;
  ack_rcv     : in data port Simple_Type;
end P;

thread Q
features
  Data_Sink : in data port Simple_Type;
  ack_send  : out data port Simple_Type;
end Q;

thread implementation P.Impl
calls cs : {
  sp : subprogram wrap.i;
};
connections
  parameter sp.Data_Source -> Data_Source;
  parameter ack_rcv -> sp.ack_rcv;
properties
  Dispatch_Protocol                  => Periodic;
  Period                             => 500 Ms;
  Cheddar_Properties::Fixed_Priority => 3;
end P.Impl;

thread implementation Q.Impl
calls cs : {
  sp_1 : subprogram Ping2_Spg;
};
connections
  parameter Data_Sink -> sp_1.msg_in;
  parameter sp_1.msg_out -> ack_send;
properties
  Dispatch_Protocol                  => Periodic;
  Period                             => 500 Ms;
  Cheddar_Properties::Fixed_Priority => 3;
end Q.Impl;

subprogram wrap
features
  Data_Source : out parameter Simple_Type;
  ack_rcv     : in parameter Simple_Type;
end wrap;

subprogram implementation wrap.i
calls cs : {
  P_Spg  : subprogram Do_Ping_Spg;
  P_Spg2 : subprogram Handle_ACK;
};
connections
  parameter P_Spg.Data_Source -> Data_Source;
  parameter ack_rcv -> P_Spg2.ack;
end wrap.i;

end s;