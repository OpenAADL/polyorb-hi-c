PolyORB-HI examples
--------------------

This directory contains examples of PolyORB-HI.

* d3.1.3-1: example from the IST-ASSERT project 

* d3.1.3-1_extended: extended example from the IST-ASSERT project,
  with two nodes interacting

* delayed_connections: example to test AADL delayed connections

* flight_mgmt: model for a flight controller

* import: test the import of C code in AADL models

* mode_switch: test AADL mode changes feature

* mpc: A model for the MPC PP demonstrator

* multiple instances: illustrate the support of multimple thread
  instances in the same node.

* ping: simple test, node a pings node b periodically

* prime_numbers: example to test AADL hybrid threads

* producer consummer: extended example, from the producer/consumer
  example provided by DVT.

* radar: case study made in collaboration with Ellidiss and Virtualys
  to demonstrate integration with STOOD and Cheddar.

* rap: this is an AADLv1 adaptation of the "Generic Avionic Platform",
  by C. Douglass Locke, David R. Vogel, Lee Lucas , John B. Goodenough
  as presented in the CMU/SEI Technical Report CMU/SEI-90-TR-8.

* ravenscar_example: case study issued from the ``Guide for the use of
  the Ada Ravenscar Profile in high integrity systems'' writtent by
  Alan Burns, Brian Dobbing and Tullio Vardanega.

* rma: Simple test to check RMA from the Cheddar schedulability
  analysis tool.

* some_types: node a sends a few types to node b periodically

* subprogram_ports: Test the event [data] raising on AADL subprogram
  OUT ports.

* sunseeker: example provided by CMU SEI to test some AADL features,
  and their code generation patterns.

To build an example, issue:

 ocarina -b -x path/to/example_dir/scenario[_<???>].aadl

This should generate code and compile it in your current working
directory.

For each test, when compiled, each subdirectory holds binaries and
code generated for each scenario. The suffix indicates the target:
native, erc32 or leon

Please, refer to <test_name>/README for more details on the different
tests and configurations.
