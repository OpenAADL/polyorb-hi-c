-- This model represents the case study from the chapter written by
-- Emmanuel Grolleau, Pascal Richard and MichaÃ«l Richard, Scheduling
-- in Distributed Real-Time Systems, Distributed Systems: Design and
-- Algorithms, chapt. 7, Serge Haddad, Fabrice Kordon, Laurent Pautet,
-- Laure Petrucci, ISTE, Wiley, 2011

package Car
public
  with Buses::CAN;
  with Processors;

  -- Generic Components

  thread T
  properties
    Dispatch_Protocol => Periodic;
  end T;

  processor CPU extends Processors::Generic_CPU
  end CPU;

  data M1 end M1;
  data M2 end M2;
  data M3 end M3;
  data M4 end M4;

  ------------
  -- Node A --
  ------------

  thread T1 extends T
  features
    M1_Out : out event data port M1;
  end T1;

  thread T2 extends T
  features
    M2_In : in event data port M2;
  end T2;

  process PA
  features
    M1_Out : out event data port M1;
    M2_In  : in  event data port M2;
  end PA;

  process implementation PA.A
  subcomponents
    T1 : thread T1 {
      Compute_Execution_Time => 52 ms .. 52 ms;
      Deadline               => 200 ms;
      Period                 => 100 ms;
    };
    T2 : thread T2 {
      Compute_Execution_Time => 52 ms .. 52 ms;
      Deadline               => 280 ms;
      Period                 => 160 ms;
    };
  connections
    C1 : port T1.M1_Out -> M1_Out;
    C2 : port M2_In -> T2.M2_In;
  end PA.A;

  processor implementation CPU.A
  properties
    Scheduling_Protocol => (POSIX_1003_HIGHEST_PRIORITY_FIRST_PROTOCOL);
  end CPU.A;

 ------------check_edf
  -- Node B --
  ------------

  thread T5 extends T
  features
    M2_Out : out event data port M2;
  end T5;

  thread T6 extends T
  features
    M1_In  : in  event data port M1;
    M3_Out : out event data port M3;
  end T6;

  process PB
  features
    M1_In  : in  event data port M1;
    M2_Out : out event data port M2;
    M3_Out : out event data port M3;
  end PB;

  process implementation PB.B
  subcomponents
    T3 : thread T {
      Compute_Execution_Time => 10 ms .. 10 ms;
      Deadline               => 60 ms;
      Period                 => 40 ms;
    };
    T4 : thread T {
      Compute_Execution_Time => 20 ms .. 20 ms;
      Deadline               => 85 ms;
      Period                 => 60 ms;
    };
    T5 : thread T5 {
      Compute_Execution_Time => 52 ms .. 52 ms;
      Deadline               => 150 ms;
      Period                 => 160 ms;
    };
    T6 : thread T6 {
      Compute_Execution_Time => 52 ms .. 52 ms;
      Deadline               => 220 ms;
      Period                 => 100 ms;
    };
  connections
    C1 : port M1_In -> T6.M1_In;
    C2 : port T5.M2_Out -> M2_Out;
    C3 : port T6.M3_out -> M3_Out;
  end PB.B;

  processor implementation CPU.B
  properties
    Scheduling_Protocol => (EDF);
  end CPU.B;

  ------------
  -- Node C --check_edf
  ------------

  thread T9 extends T
  features
    M3_In : in event data port M3;
    M4_Out : out event data port M4;
  end T9;

  thread T8 extends T
  features
    M4_In : in event data port M4;
  end T8;

  process PC
  features
    M3_In : in event data port M3;
  end PC;

  process implementation PC.C
  subcomponents
    T7 : thread T {
      Compute_Execution_Time => 28 ms .. 28 ms;
      Deadline               => 60 ms;
      Period                 => 60 ms;
    };
    T8 : thread T8 {
      Compute_Execution_Time => 25 ms .. 25 ms;
      Deadline               => 320 ms;
      Period                 => 100 ms;
    };
    T9 : thread T9 {
      Compute_Execution_Time => 14 ms .. 14 ms;
      Deadline               => 250 ms;
      Period                 => 100 ms;
    };
  connections
    C1 : port M3_In -> T9.M3_In;
    C2 : port T9.M4_Out -> T8.M4_In;
  end PC.C;

  processor implementation CPU.C
  properties
    Scheduling_Protocol => (POSIX_1003_HIGHEST_PRIORITY_FIRST_PROTOCOL);
  end CPU.C;

  ----------------
  -- Car System --
  ----------------

  system Car end Car;

  system implementation Car.impl
  subcomponents
    Process_A : process PA.A;
    CPU_A : processor CPU.A;

    Process_B : process PB.B;
    CPU_B : processor CPU.B;

    Process_C : process PC.C;
    CPU_C : processor CPU.C;

    CAN : bus Buses::CAN::CAN;
  connections
    C1 : port Process_A.M1_Out -> Process_B.M1_In;
    C2 : port Process_B.M2_Out -> Process_A.M2_In;
    C3 : port Process_B.M3_Out -> Process_C.M3_In;

  properties
    Actual_Processor_Binding => (reference (CPU_A)) applies to Process_A;
    Actual_Processor_Binding => (reference (CPU_B)) applies to Process_B;
    Actual_Processor_Binding => (reference (CPU_C)) applies to Process_C;

    Actual_Connection_Binding => (reference (CAN)) applies to C1;
    Actual_Connection_Binding => (reference (CAN)) applies to C2;
    Actual_Connection_Binding => (reference (CAN)) applies to C3;
  
   annex real_specification {**
      theorem check_edf
      foreach s in processor_set do
      requires(edf);
      check(1=1);
      end check_edf;
      **};
  end Car.impl;

end Car;