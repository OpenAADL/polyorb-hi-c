--  This model defines the main processor of the system, along with
--  partitions attached as virtual processor subcomponents.

package ADIRU_processor
public

  with ARINC653;
  with partitions;

  --  Following ARINC653 annex document guidelines and AADLv2.1
  --  standard, a processor defines a scheduling space. We use this
  --  definition to define a PowerPC component with the configuration
  --  of the RTOS: partitions, module schedule and health-monitoring
  --  capabilities

  processor powerpc
  end powerpc;

  processor implementation powerpc.impl
  subcomponents
    --  ARINC653 partitions are subcomponents of the PowerPC component

    part1: virtual processor partitions::acc_partition.impl
               { ARINC653::Partition_Identifier => 1;
                 ARINC653::Partition_Name       => "acc"; };
    part2: virtual processor partitions::acc_hm_partition.impl
               { ARINC653::Partition_Identifier => 1; -- XXX same as others ?
                 ARINC653::Partition_Name       => "acc_hm"; };
    part3: virtual processor partitions::ADIRUp_partition.impl
               { ARINC653::Partition_Identifier => 1; -- XXX same as others ?
                 ARINC653::Partition_Name       => "adirup"; };
    part4: virtual processor partitions::SHM_partition.impl
               { ARINC653::Partition_Identifier => 1; -- XXX same as others ?
                 ARINC653::Partition_Name       => "shm"; };
  properties
    --  Definition of the scheduling policy to be enforced accross
    --  partitions by the ARINC653 APEX.

    ARINC653::Module_Major_Frame => 150 ms;
    ARINC653::Module_Schedule =>
	    ( [Partition => reference (part1); Duration  => 1 ms; Periodic_Processing_Start => true;],
	      [Partition => reference (part2); Duration  => 1 ms; Periodic_Processing_Start => true;],
	      [Partition => reference (part3); Duration  => 1 ms; Periodic_Processing_Start => true;],
	      [Partition => reference (part4); Duration  => 1 ms; Periodic_Processing_Start => true;]
	    );

    --  Definition of health-monitoring capabilities, along with
    --  corresponding error level, error code, and associated error
    --  recovery actions.

    ARINC653::HM_Error_ID_Levels =>
           ([ErrorIdentifier => 1; Description => "Deadline Missed"; ErrorLevel => Process_Level ; ErrorCode => Deadline_Miss;],
     	    [ErrorIdentifier => 2; Description => "Application Error"           ; ErrorLevel => Process_Level ; ErrorCode => Application_Error;],
     	    [ErrorIdentifier => 3; Description => "Numeric Error"               ; ErrorLevel => Process_Level ; ErrorCode => Numeric_Error;],
     	    [ErrorIdentifier => 4; Description => "Illegal Request"             ; ErrorLevel => Process_Level ; ErrorCode => Illegal_Request;],
     	    [ErrorIdentifier => 5; Description => "Stack Overflow"              ; ErrorLevel => Process_Level ; ErrorCode => Stack_Overflow;],
     	    [ErrorIdentifier => 6; Description => "Memory Violation"            ; ErrorLevel => Process_Level ; ErrorCode => Memory_Violation;],
     	    [ErrorIdentifier => 7; Description => "Hardware Fault"              ; ErrorLevel => Process_Level ; ErrorCode => Hardware_Fault;],
     	    [ErrorIdentifier => 8; Description => "Power Failure"               ; ErrorLevel => Process_Level ; ErrorCode => Power_Fail;]);

    ARINC653::HM_Error_ID_Actions =>
           ([ErrorIdentifier => 1 ; Description => "Ignore the error"; Action => "ignore";],
            [ErrorIdentifier => 2 ; Description => "Ignore the error"; Action => "ignore";],
            [ErrorIdentifier => 3 ; Description => "Ignore the error"; Action => "ignore";],
            [ErrorIdentifier => 4 ; Description => "Ignore the error"; Action => "ignore";],
            [ErrorIdentifier => 5 ; Description => "Ignore the error"; Action => "ignore";],
            [ErrorIdentifier => 6 ; Description => "Ignore the error"; Action => "ignore";],
            [ErrorIdentifier => 7 ; Description => "Ignore the error"; Action => "ignore";],
            [ErrorIdentifier => 8 ; Description => "Ignore the error"; Action => "ignore";]);
  end powerpc.impl;

end ADIRU_processor;
